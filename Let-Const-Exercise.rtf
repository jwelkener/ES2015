{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-BoldItalic;\f2\froman\fcharset0 Times-Roman;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 **
\f1\i let
\f0\i0 \'a0and\'a0
\f1\i const
\f0\i0 \'a0Exercise\
\pard\pardeftab720\sa240\partightenfactor0

\f2\b0\fs24 \cf0 In this exercise, you\'92ll refactor some ES5 code into ES2015.\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 ES5 Global Constants\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 var PI = 3.14;\
PI = 42; // stop me from doing this!\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 ES2015 Global Constants\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 /* Write an ES2015 Version */\
\
const PI = 3.14;\
// cannot redeclare or reassign a const variable\
// const is appropriate here because PI is a mathematical constant\
\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Quiz\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f1\i\b var
\f2\i0\b0 \'a0and\'a0
\f1\i\b let
\f2\i0\b0 ?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f0\b var
\f2\b0 \'a0and\'a0
\f1\i\b const
\f2\i0\b0 ?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f0\b let
\f2\b0 \'a0and\'a0
\f0\b const
\f2\b0 ?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is hoisting?\
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Solution\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f1\i\b var
\f2\i0\b0 \'a0and\'a0
\f1\i\b let
\f2\i0\b0 ?\uc0\u8232 You can reassign and redeclare with\'a0
\f1\i\b var
\f2\i0\b0 , but you can not redeclare using the\'a0
\f1\i\b let
\f2\i0\b0 \'a0keyword. You can access a hoisted variable with var. Let creates block scope.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f1\i\b var
\f2\i0\b0 \'a0and\'a0
\f1\i\b const
\f2\i0\b0 ?\uc0\u8232 You can reassign and redeclare with\'a0
\f1\i\b var
\f2\i0\b0 , but you can not redeclare or reassign using the\'a0
\f1\i\b const
\f2\i0\b0 \'a0keyword. You can access a hoisted variable with var. Const creates block scope.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between\'a0
\f1\i\b let
\f2\i0\b0 \'a0and\'a0
\f1\i\b const
\f2\i0\b0 ?\uc0\u8232 You can reassign with\'a0
\f1\i\b let
\f2\i0\b0 , but you can not redeclare or reassign using the\'a0
\f1\i\b const
\f2\i0\b0 \'a0keyword.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is hoisting?\uc0\u8232 It\'92s the way that we explain how the JS compiler works. Variables are lifting or \'93hoisted\'94 to the top of the scope they are declared in. When using\'a0
\f1\i\b var
\f2\i0\b0 , you can access the variable name and it\'92s undefined value before it is used later on.\uc0\u8232 Function declarations are also hoisted and can be invoked \'93before\'94 they are defined in a codebase.\
}